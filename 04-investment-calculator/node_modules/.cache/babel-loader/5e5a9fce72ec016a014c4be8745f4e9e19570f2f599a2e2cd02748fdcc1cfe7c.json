{"ast":null,"code":"var _jsxFileName = \"/Users/seojuyeon/Desktop/React Guide/04-investment-calculator/src/App.js\",\n  _s = $RefreshSig$();\nimport Header from \"./Header/Header\";\nimport InvestInput from \"./InvestInput/InvestInput\";\nimport { useState } from \"react\";\nimport ResultTable from \"./ResultTable/ResultTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isValid, setIsValid] = useState(false);\n  const calculateHandler = userInput => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    const yearlyData = []; // per-year results\n\n    let currentSavings = +userInput[\"current-savings\"]; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput[\"yearly-contribution\"]; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput[\"expected-return\"] / 100;\n    const duration = +userInput[\"duration\"];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n\n    // do something with yearlyData ...\n  };\n\n  const submitHandler = userInput => {\n    console.log(userInput);\n    setIsValid(true);\n  };\n  const resetHandler = () => {\n    setIsValid(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InvestInput, {\n      onSubmit: submitHandler,\n      onReset: resetHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResultTable, {\n      valid: isValid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"f8ezDtY664BjKG4YZGDPR5o1gaY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","InvestInput","useState","ResultTable","jsxDEV","_jsxDEV","App","_s","isValid","setIsValid","calculateHandler","userInput","yearlyData","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","submitHandler","console","log","resetHandler","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onReset","valid","_c","$RefreshReg$"],"sources":["/Users/seojuyeon/Desktop/React Guide/04-investment-calculator/src/App.js"],"sourcesContent":["import Header from \"./Header/Header\";\nimport InvestInput from \"./InvestInput/InvestInput\";\nimport { useState } from \"react\";\nimport ResultTable from \"./ResultTable/ResultTable\";\n\nfunction App() {\n    const [isValid, setIsValid] = useState(false);\n\n    const calculateHandler = (userInput) => {\n        // Should be triggered when form is submitted\n        // You might not directly want to bind it to the submit event on the form though...\n\n        const yearlyData = []; // per-year results\n\n        let currentSavings = +userInput[\"current-savings\"]; // feel free to change the shape of this input object!\n        const yearlyContribution = +userInput[\"yearly-contribution\"]; // as mentioned: feel free to change the shape...\n        const expectedReturn = +userInput[\"expected-return\"] / 100;\n        const duration = +userInput[\"duration\"];\n\n        // The below code calculates yearly results (total savings, interest etc)\n        for (let i = 0; i < duration; i++) {\n            const yearlyInterest = currentSavings * expectedReturn;\n            currentSavings += yearlyInterest + yearlyContribution;\n            yearlyData.push({\n                // feel free to change the shape of the data pushed to the array!\n                year: i + 1,\n                yearlyInterest: yearlyInterest,\n                savingsEndOfYear: currentSavings,\n                yearlyContribution: yearlyContribution,\n            });\n        }\n\n        // do something with yearlyData ...\n    };\n\n    const submitHandler = (userInput) => {\n        console.log(userInput);\n        setIsValid(true);\n    };\n\n    const resetHandler = () => {\n        setIsValid(false);\n    };\n\n\n    return (\n        <div>\n            <Header/>\n            <InvestInput onSubmit={submitHandler} onReset={resetHandler}/>\n            <ResultTable valid={isValid}/>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,iBAAiB;AACpC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMQ,gBAAgB,GAAIC,SAAS,IAAK;IACpC;IACA;;IAEA,MAAMC,UAAU,GAAG,EAAE,CAAC,CAAC;;IAEvB,IAAIC,cAAc,GAAG,CAACF,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC;IACpD,MAAMG,kBAAkB,GAAG,CAACH,SAAS,CAAC,qBAAqB,CAAC,CAAC,CAAC;IAC9D,MAAMI,cAAc,GAAG,CAACJ,SAAS,CAAC,iBAAiB,CAAC,GAAG,GAAG;IAC1D,MAAMK,QAAQ,GAAG,CAACL,SAAS,CAAC,UAAU,CAAC;;IAEvC;IACA,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;MAC/B,MAAMC,cAAc,GAAGL,cAAc,GAAGE,cAAc;MACtDF,cAAc,IAAIK,cAAc,GAAGJ,kBAAkB;MACrDF,UAAU,CAACO,IAAI,CAAC;QACZ;QACAC,IAAI,EAAEH,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BG,gBAAgB,EAAER,cAAc;QAChCC,kBAAkB,EAAEA;MACxB,CAAC,CAAC;IACN;;IAEA;EACJ,CAAC;;EAED,MAAMQ,aAAa,GAAIX,SAAS,IAAK;IACjCY,OAAO,CAACC,GAAG,CAACb,SAAS,CAAC;IACtBF,UAAU,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMgB,YAAY,GAAGA,CAAA,KAAM;IACvBhB,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EAGD,oBACIJ,OAAA;IAAAqB,QAAA,gBACIrB,OAAA,CAACL,MAAM;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTzB,OAAA,CAACJ,WAAW;MAAC8B,QAAQ,EAAET,aAAc;MAACU,OAAO,EAAEP;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC9DzB,OAAA,CAACF,WAAW;MAAC8B,KAAK,EAAEzB;IAAQ;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEd;AAACvB,EAAA,CA/CQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}