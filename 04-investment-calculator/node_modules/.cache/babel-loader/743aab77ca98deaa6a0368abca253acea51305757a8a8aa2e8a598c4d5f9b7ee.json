{"ast":null,"code":"var _jsxFileName = \"/Users/seojuyeon/Desktop/React Guide/04-investment-calculator/src/Result/CalculateHandler.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calculateHandler = props => {\n  // Should be triggered when form is submitted\n  // You might not directly want to bind it to the submit event on the form though...\n  const yearlyData = []; // per-year results\n\n  let currentSavings = +props.input[\"current-savings\"]; // feel free to change the shape of this input object!\n  const yearlyContribution = +props.input[\"yearly-contribution\"]; // as mentioned: feel free to change the shape...\n  const expectedReturn = +props.input[\"expected-return\"] / 100;\n  const duration = +props.input[\"duration\"];\n\n  // The below code calculates yearly results (total savings, interest etc)\n  for (let i = 0; i < duration; i++) {\n    const yearlyInterest = currentSavings * expectedReturn;\n    currentSavings += yearlyInterest + yearlyContribution;\n    yearlyData.push({\n      // feel free to change the shape of the data pushed to the array!\n      year: i + 1,\n      yearlyInterest: yearlyInterest,\n      savingsEndOfYear: currentSavings,\n      yearlyContribution: yearlyContribution\n    });\n  }\n  console.log(yearlyData);\n\n  // do something with yearlyData ...\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"result\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total Savings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Interest (Year)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total Interest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Invested Capital\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: yearlyData.map(year => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", year.year]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", year.savingsEndOfYear]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", year.yearlyInterest]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\nexport default calculateHandler;","map":{"version":3,"names":["calculateHandler","props","yearlyData","currentSavings","input","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","console","log","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map"],"sources":["/Users/seojuyeon/Desktop/React Guide/04-investment-calculator/src/Result/CalculateHandler.js"],"sourcesContent":["const calculateHandler = (props) => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n    const yearlyData = []; // per-year results\n\n    let currentSavings = +props.input[\"current-savings\"]; // feel free to change the shape of this input object!\n    const yearlyContribution = +props.input[\"yearly-contribution\"]; // as mentioned: feel free to change the shape...\n    const expectedReturn = +props.input[\"expected-return\"] / 100;\n    const duration = +props.input[\"duration\"];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n        const yearlyInterest = currentSavings * expectedReturn;\n        currentSavings += yearlyInterest + yearlyContribution;\n        yearlyData.push({\n            // feel free to change the shape of the data pushed to the array!\n            year: i + 1,\n            yearlyInterest: yearlyInterest,\n            savingsEndOfYear: currentSavings,\n            yearlyContribution: yearlyContribution,\n        });\n    }\n\n    console.log(yearlyData);\n\n    // do something with yearlyData ...\n    return (\n        <table className=\"result\">\n            <thead>\n                <tr>\n                    <th>Year</th>\n                    <th>Total Savings</th>\n                    <th>Interest (Year)</th>\n                    <th>Total Interest</th>\n                    <th>Invested Capital</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    {yearlyData.map((year) => {\n                        return (\n                            <tr>\n                                <td>${year.year}</td>\n                                <td>${year.savingsEndOfYear}</td>\n                                <td>${year.yearlyInterest}</td>\n                            </tr>\n                        );\n                    })}\n\n                    {/* <td>YEAR NUMBER</td>\n                    <td>TOTAL SAVINGS END OF YEAR</td>\n                    <td>INTEREST GAINED IN YEAR</td>\n                    <td>TOTAL INTEREST GAINED</td>\n                    <td>TOTAL INVESTED CAPITAL</td> */}\n                </tr>\n            </tbody>\n        </table>\n    );\n};\n\nexport default calculateHandler;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}