{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducrs: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      if (!existingItem) {\n        state.items.push({\n          name: newItem.title,\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem.quantity == 1) {\n        state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nexport default cartSlice;\nexport const cartActions = cartSlice.actions;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducrs","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","title","itemId","price","quantity","totalPrice","removeItemFromCart","filter","cartActions","actions"],"sources":["/Users/seojuyeon/Desktop/React Guide/16-deep-redux/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n  },\n  reducrs: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      if(!existingItem) {\n        state.items.push({\n          name: newItem.title,\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n        });\n      }\n      else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      if(existingItem.quantity == 1) {\n        state.items.filter(item => item.id !== id);  \n      }\n      else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\n\nexport default cartSlice;\nexport const cartActions = cartSlice.actions;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE;EACjB,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC3B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACrE,IAAG,CAACH,YAAY,EAAE;QAChBJ,KAAK,CAACJ,KAAK,CAACY,IAAI,CAAC;UACfd,IAAI,EAAEQ,OAAO,CAACO,KAAK;UACnBC,MAAM,EAAER,OAAO,CAACK,EAAE;UAClBI,KAAK,EAAET,OAAO,CAACS,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAEX,OAAO,CAACS;QACtB,CAAC,CAAC;MACJ,CAAC,MACI;QACHP,YAAY,CAACQ,QAAQ,EAAE;QACvBR,YAAY,CAACS,UAAU,GAAGT,YAAY,CAACS,UAAU,GAAGX,OAAO,CAACS,KAAK;MACnE;IACF,CAAC;IACDG,kBAAkBA,CAACd,KAAK,EAAEC,MAAM,EAAE;MAChC,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC7D,IAAGH,YAAY,CAACQ,QAAQ,IAAI,CAAC,EAAE;QAC7BZ,KAAK,CAACJ,KAAK,CAACmB,MAAM,CAACT,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5C,CAAC,MACI;QACHH,YAAY,CAACQ,QAAQ,EAAE;QACvBR,YAAY,CAACS,UAAU,GAAGT,YAAY,CAACS,UAAU,GAAGT,YAAY,CAACO,KAAK;MACxE;IACF;EACF;AACF,CAAC,CAAC;AAEF,eAAelB,SAAS;AACxB,OAAO,MAAMuB,WAAW,GAAGvB,SAAS,CAACwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}