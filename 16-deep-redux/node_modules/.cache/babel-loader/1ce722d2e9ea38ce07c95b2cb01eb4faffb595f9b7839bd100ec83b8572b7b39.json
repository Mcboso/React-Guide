{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const response = await fetch(\"https://react-http-f1077-default-rtdb.firebaseio.com/cart.json\", {\n      method: \"GET\"\n    });\n    console.log(response);\n  };\n};\nexport const sendCartData = cart => {\n  // action 생성자로 사용 (꼭 type이 있는 객체 아니어도 됨, 함수 return하는 함수도 가능)\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Seding...\",\n      message: \"Sending cart data...\"\n    }));\n    const sendRequest = async request => {\n      const response = await fetch(\"https://react-http-f1077-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Sending cart data successfully!\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Sending cart data failed.\"\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","fetchCartData","dispatch","response","fetch","method","console","log","sendCartData","cart","showNotification","status","title","message","sendRequest","request","body","JSON","stringify","ok","Error","error"],"sources":["/Users/seojuyeon/Desktop/React Guide/16-deep-redux/src/store/cart-actions.js"],"sourcesContent":["import { uiActions } from \"./ui-slice\";\n\nexport const fetchCartData = () => {\n  return async (dispatch) => {\n    const response = await fetch(\n      \"https://react-http-f1077-default-rtdb.firebaseio.com/cart.json\",\n      {\n        method: \"GET\"\n      }\n    );\n    console.log(response);\n  }\n};\n\nexport const sendCartData = (cart) => { // action 생성자로 사용 (꼭 type이 있는 객체 아니어도 됨, 함수 return하는 함수도 가능)\n  return async (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        status: \"pending\",\n        title: \"Seding...\",\n        message: \"Sending cart data...\",\n      })\n    );\n\n    const sendRequest = async (request) => {\n      const response = await fetch(\n        \"https://react-http-f1077-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify(cart),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success!\",\n          message: \"Sending cart data successfully!\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Sending cart data failed.\",\n        })\n      );\n    }\n  };\n};"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AAEtC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAAgE,EAChE;MACEC,MAAM,EAAE;IACV,CACF,CAAC;IACDC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;EACvB,CAAC;AACH,CAAC;AAED,OAAO,MAAMK,YAAY,GAAIC,IAAI,IAAK;EAAE;EACtC,OAAO,MAAOP,QAAQ,IAAK;IACzBA,QAAQ,CACNF,SAAS,CAACU,gBAAgB,CAAC;MACzBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,WAAW;MAClBC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IAED,MAAMC,WAAW,GAAG,MAAOC,OAAO,IAAK;MACrC,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAAgE,EAChE;QACEC,MAAM,EAAE,KAAK;QACbW,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,IAAI;MAC3B,CACF,CAAC;MAED,IAAI,CAACN,QAAQ,CAACgB,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;IACF,CAAC;IACD,IAAI;MACF,MAAMN,WAAW,CAAC,CAAC;MACnBZ,QAAQ,CACNF,SAAS,CAACU,gBAAgB,CAAC;QACzBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdnB,QAAQ,CACNF,SAAS,CAACU,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}