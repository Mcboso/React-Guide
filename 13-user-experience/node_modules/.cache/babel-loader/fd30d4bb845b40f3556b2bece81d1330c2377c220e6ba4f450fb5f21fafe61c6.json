{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useReducer } from \"react\";\nconst inputReducer = (state, action) => {\n  return {\n    value: \"\",\n    isTouched: false\n  };\n};\nconst useInput = validateValue => {\n  _s();\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n  const [valueState, dispatchValue] = useReducer(inputReducer, {\n    value: \"\",\n    isTouched: false\n  });\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = isTouched && !valueIsValid; // 실제로 입력이 잘못 된 경우 (최초 제외)\n\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n  const inputBlurHandler = event => {\n    setIsTouched(true);\n  };\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n_s(useInput, \"ovK2SZr+H/D1seOtcgA26POjCng=\");\nexport default useInput;","map":{"version":3,"names":["useState","useReducer","inputReducer","state","action","value","isTouched","useInput","validateValue","_s","enteredValue","setEnteredValue","setIsTouched","valueState","dispatchValue","valueIsValid","hasError","valueChangeHandler","event","target","inputBlurHandler","reset","isValid"],"sources":["/Users/seojuyeon/Desktop/React Guide/13-user-experience/src/hooks/use-input.js"],"sourcesContent":["import { useState, useReducer } from \"react\";\n\nconst inputReducer = (state, action) => {\n  return { value: \"\", isTouched: false };\n};\n\nconst useInput = (validateValue) => {\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n\n  const [valueState, dispatchValue] = useReducer(inputReducer, {\n    value: \"\",\n    isTouched: false,\n  });\n\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = isTouched && !valueIsValid; // 실제로 입력이 잘못 된 경우 (최초 제외)\n\n  const valueChangeHandler = (event) => {\n    setEnteredValue(event.target.value);\n  };\n  const inputBlurHandler = (event) => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAE5C,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACtC,OAAO;IAAEC,KAAK,EAAE,EAAE;IAAEC,SAAS,EAAE;EAAM,CAAC;AACxC,CAAC;AAED,MAAMC,QAAQ,GAAIC,aAAa,IAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACM,SAAS,EAAEM,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGb,UAAU,CAACC,YAAY,EAAE;IAC3DG,KAAK,EAAE,EAAE;IACTC,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,MAAMS,YAAY,GAAGP,aAAa,CAACE,YAAY,CAAC;EAChD,MAAMM,QAAQ,GAAGV,SAAS,IAAI,CAACS,YAAY,CAAC,CAAC;;EAE7C,MAAME,kBAAkB,GAAIC,KAAK,IAAK;IACpCP,eAAe,CAACO,KAAK,CAACC,MAAM,CAACd,KAAK,CAAC;EACrC,CAAC;EACD,MAAMe,gBAAgB,GAAIF,KAAK,IAAK;IAClCN,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMS,KAAK,GAAGA,CAAA,KAAM;IAClBV,eAAe,CAAC,EAAE,CAAC;IACnBC,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,OAAO;IACLP,KAAK,EAAEK,YAAY;IACnBY,OAAO,EAAEP,YAAY;IACrBC,QAAQ;IACRC,kBAAkB;IAClBG,gBAAgB;IAChBC;EACF,CAAC;AACH,CAAC;AAACZ,EAAA,CAhCIF,QAAQ;AAkCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}