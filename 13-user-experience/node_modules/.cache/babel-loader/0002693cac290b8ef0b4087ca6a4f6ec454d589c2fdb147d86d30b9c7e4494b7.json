{"ast":null,"code":"var _jsxFileName = \"/Users/seojuyeon/Desktop/React Guide/13-user-experience/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  // const nameInputRef = useRef(\"\"); // 값 변화할 때마다 state 변경할 필요 없을 때\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const nameInputIsInvalid = enteredNameTouched && !enteredNameIsValid; // 실제로 입력이 잘못 된 경우 (최초 제외)\n  const emailInputIsInvalid = enteredEmailTouched && !enteredEmailIsValid;\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const inputChangeHandler = event => {\n    if (event.target.id === 'name') {\n      setEnteredName(event.target.value);\n    } else if (event.target.id === 'email') {\n      setEnteredEmail(event.target.value);\n    }\n  };\n  const inputBlurHandler = event => {\n    if (event.target.id === 'name') {\n      setEnteredNameTouched(true);\n    } else if (event.target.id === 'email') {\n      setEnteredEmailTouched(true);\n    }\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n    // if(nameInputIsInvalid || emailInputIsInvalid) {\n    //   return;\n    // }\n    // nameInputRef.current.value = ''; //js 코드로 dom 조작하는 것은 지양\n    setEnteredName(\"\"); // 입력된 값 초기화 하고 싶을 때는 state\n    setEnteredEmail(\"\");\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `form-control ${nameInputIsInvalid ? \"invalid\" : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: inputChangeHandler,\n        onBlur: inputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `form-control ${emailInputIsInvalid ? \"invalid\" : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: inputChangeHandler,\n        onBlur: inputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"E-mail address should include \\\"@\\\".\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"7mbcKiXjVGMFGputbaLO//xTxzE=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredName","setEnteredName","enteredEmail","setEnteredEmail","enteredNameTouched","setEnteredNameTouched","enteredEmailTouched","setEnteredEmailTouched","enteredNameIsValid","trim","enteredEmailIsValid","includes","nameInputIsInvalid","emailInputIsInvalid","formIsValid","inputChangeHandler","event","target","id","value","inputBlurHandler","formSubmissionHandler","preventDefault","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["/Users/seojuyeon/Desktop/React Guide/13-user-experience/src/components/SimpleInput.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst SimpleInput = (props) => {\n  // const nameInputRef = useRef(\"\"); // 값 변화할 때마다 state 변경할 필요 없을 때\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  \n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  \n  const enteredNameIsValid = enteredName.trim() !== '';\n  const enteredEmailIsValid = enteredEmail.includes('@');\n\n  const nameInputIsInvalid = enteredNameTouched && !enteredNameIsValid; // 실제로 입력이 잘못 된 경우 (최초 제외)\n  const emailInputIsInvalid = enteredEmailTouched && !enteredEmailIsValid;\n\n  let formIsValid = false;\n  \n  if(enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n    \n  const inputChangeHandler = (event) => {\n    if(event.target.id === 'name') {\n      setEnteredName(event.target.value);\n    } else if (event.target.id === 'email') {\n      setEnteredEmail(event.target.value);\n    }\n  };\n\n  const inputBlurHandler = (event) => {\n    if(event.target.id === 'name') {\n      setEnteredNameTouched(true);\n    } else if (event.target.id === 'email') {\n      setEnteredEmailTouched(true);\n    }\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n    // if(nameInputIsInvalid || emailInputIsInvalid) {\n    //   return;\n    // }\n    // nameInputRef.current.value = ''; //js 코드로 dom 조작하는 것은 지양\n    setEnteredName(\"\"); // 입력된 값 초기화 하고 싶을 때는 state\n    setEnteredEmail(\"\")\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={`form-control ${nameInputIsInvalid ? \"invalid\" : ''}`}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={inputChangeHandler}\n          onBlur={inputBlurHandler}\n          value={enteredName} \n        />\n        {nameInputIsInvalid && <p className=\"error-text\">Name must not be empty.</p>}\n      </div>\n      <div className={`form-control ${emailInputIsInvalid ? \"invalid\" : ''}`}>\n        <label htmlFor=\"email\">Your E-mail</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={inputChangeHandler}\n          onBlur={inputBlurHandler}\n          value={enteredEmail} \n        />\n        {emailInputIsInvalid && <p className=\"error-text\">E-mail address should include \"@\".</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}