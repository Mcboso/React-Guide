{"ast":null,"code":"var _jsxFileName = \"/Users/seojuyeon/Desktop/React Guide/13-user-experience/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  // const nameInputRef = useRef(\"\"); // 값 변화할 때마다 state 변경할 필요 없을 때\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const emailInputIsInvalid = enteredEmailTouched && !enteredEmailIsValid;\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n    // if(nameInputIsInvalid || emailInputIsInvalid) {\n    //   return;\n    // }\n    // nameInputRef.current.value = ''; //js 코드로 dom 조작하는 것은 지양\n    setEnteredName(\"\"); // 입력된 값 초기화 하고 싶을 때는 state\n    setEnteredEmail(\"\");\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `form-control ${nameInputIsInvalid ? \"invalid\" : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: inputChangeHandler,\n        onBlur: inputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `form-control ${emailInputIsInvalid ? \"invalid\" : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: inputChangeHandler,\n        onBlur: inputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"E-mail address should include \\\"@\\\".\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"kcwHtehIndFOazlo8H9cm8z2nBM=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsValid","includes","emailInputIsInvalid","formIsValid","enteredNameIsValid","formSubmissionHandler","event","preventDefault","setEnteredNameTouched","setEnteredName","onSubmit","children","className","nameInputIsInvalid","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","inputChangeHandler","onBlur","inputBlurHandler","value","enteredName","disabled","_c","$RefreshReg$"],"sources":["/Users/seojuyeon/Desktop/React Guide/13-user-experience/src/components/SimpleInput.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst SimpleInput = (props) => {\n  // const nameInputRef = useRef(\"\"); // 값 변화할 때마다 state 변경할 필요 없을 때\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  \n  \n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  \n  \n  const enteredEmailIsValid = enteredEmail.includes('@');\n\n  \n  const emailInputIsInvalid = enteredEmailTouched && !enteredEmailIsValid;\n\n  let formIsValid = false;\n  \n  if(enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n    // if(nameInputIsInvalid || emailInputIsInvalid) {\n    //   return;\n    // }\n    // nameInputRef.current.value = ''; //js 코드로 dom 조작하는 것은 지양\n    setEnteredName(\"\"); // 입력된 값 초기화 하고 싶을 때는 state\n    setEnteredEmail(\"\")\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={`form-control ${nameInputIsInvalid ? \"invalid\" : ''}`}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={inputChangeHandler}\n          onBlur={inputBlurHandler}\n          value={enteredName} \n        />\n        {nameInputIsInvalid && <p className=\"error-text\">Name must not be empty.</p>}\n      </div>\n      <div className={`form-control ${emailInputIsInvalid ? \"invalid\" : ''}`}>\n        <label htmlFor=\"email\">Your E-mail</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={inputChangeHandler}\n          onBlur={inputBlurHandler}\n          value={enteredEmail} \n        />\n        {emailInputIsInvalid && <p className=\"error-text\">E-mail address should include \"@\".</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}