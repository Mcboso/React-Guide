{"ast":null,"code":"var _jsxFileName = \"/Users/seojuyeon/Desktop/React Guide/13-user-experience/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    enteredNameIsValid: isValid,\n    hasError: nameInputIsInvalid,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => value.trim() !== '');\n\n  // const nameInputRef = useRef(\"\"); // 값 변화할 때마다 state 변경할 필요 없을 때\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.includes(\"@\");\n  const emailInputIsInvalid = enteredEmailTouched && !enteredEmailIsValid;\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n    // if(nameInputIsInvalid || emailInputIsInvalid) {\n    //   return;\n    // }\n    // nameInputRef.current.value = ''; //js 코드로 dom 조작하는 것은 지양\n    setEnteredName(\"\"); // 입력된 값 초기화 하고 싶을 때는 state\n    setEnteredEmail(\"\");\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `form-control ${nameInputIsInvalid ? \"invalid\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: inputChangeHandler,\n        onBlur: inputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `form-control ${emailInputIsInvalid ? \"invalid\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: inputChangeHandler,\n        onBlur: inputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"E-mail address should include \\\"@\\\".\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"5b5gv/jF3cDCUUZ0aREUAZgobF0=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useEffect","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","value","enteredName","enteredNameIsValid","isValid","hasError","nameInputIsInvalid","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","trim","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsValid","includes","emailInputIsInvalid","formIsValid","formSubmissionHandler","event","preventDefault","setEnteredNameTouched","setEnteredName","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","inputChangeHandler","onBlur","disabled","_c","$RefreshReg$"],"sources":["/Users/seojuyeon/Desktop/React Guide/13-user-experience/src/components/SimpleInput.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    enteredNameIsValid: isValid,\n    hasError: nameInputIsInvalid,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n  } = useInput(value => value.trim() !== ''); \n   \n  // const nameInputRef = useRef(\"\"); // 값 변화할 때마다 state 변경할 필요 없을 때\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n  const enteredEmailIsValid = enteredEmail.includes(\"@\");\n\n  const emailInputIsInvalid = enteredEmailTouched && !enteredEmailIsValid;\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n    // if(nameInputIsInvalid || emailInputIsInvalid) {\n    //   return;\n    // }\n    // nameInputRef.current.value = ''; //js 코드로 dom 조작하는 것은 지양\n    setEnteredName(\"\"); // 입력된 값 초기화 하고 싶을 때는 state\n    setEnteredEmail(\"\");\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={`form-control ${nameInputIsInvalid ? \"invalid\" : \"\"}`}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={inputChangeHandler}\n          onBlur={inputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && (\n          <p className=\"error-text\">Name must not be empty.</p>\n        )}\n      </div>\n      <div className={`form-control ${emailInputIsInvalid ? \"invalid\" : \"\"}`}>\n        <label htmlFor=\"email\">Your E-mail</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={inputChangeHandler}\n          onBlur={inputBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputIsInvalid && (\n          <p className=\"error-text\">E-mail address should include \"@\".</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}