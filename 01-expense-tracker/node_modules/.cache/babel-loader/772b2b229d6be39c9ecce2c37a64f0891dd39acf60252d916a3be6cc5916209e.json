{"ast":null,"code":"var _jsxFileName = \"/Users/seojuyeon/Desktop/React Guide/01-expense-tracker/src/components/Expenses/Expenses.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n    // console.log(\"Expenses.js: \" + selectedYear);\n    // console.log(props.items.filter((expense)=>expense.date.getFullYear().toString() === filteredYear));\n  };\n\n  const filteredExpenses = props.items.filter(expense => expense.date.getFullYear().toString() === filteredYear);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), filteredExpenses.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No expenses found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 51\n      }, this), filteredExpenses.length > 0 && filteredExpenses.map(expenseInfo => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        expense: expenseInfo\n      }, expenseInfo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(Expenses, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["useState","Card","ExpenseItem","ExpensesFilter","jsxDEV","_jsxDEV","Expenses","props","_s","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","children","className","selected","onChangeFilter","fileName","_jsxFileName","lineNumber","columnNumber","length","map","expenseInfo","id","_c","$RefreshReg$"],"sources":["/Users/seojuyeon/Desktop/React Guide/01-expense-tracker/src/components/Expenses/Expenses.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"./ExpensesFilter\";\n\nconst Expenses = (props) => {\n    const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n    const filterChangeHandler = (selectedYear) => {\n        setFilteredYear(selectedYear);\n        // console.log(\"Expenses.js: \" + selectedYear);\n        // console.log(props.items.filter((expense)=>expense.date.getFullYear().toString() === filteredYear));\n    };\n\n    const filteredExpenses = props.items.filter(\n        (expense) => expense.date.getFullYear().toString() === filteredYear\n    );\n\n    return (\n        <div>\n            <Card className=\"expenses\">\n                <ExpensesFilter\n                    selected={filteredYear}\n                    onChangeFilter={filterChangeHandler}\n                />\n                {/* setState는 비동기적으로 일어나므로 state 즉각적으로 표시해주려면 selected와 같은 prop 추가해야함 */}\n                {/* {filteredExpenses.length === 0 ? (\n                    <p>No expenses found</p>\n                ) : (\n                    filteredExpenses.map((expenseInfo) => (\n                        <ExpenseItem\n                            key={expenseInfo.id}\n                            expense={expenseInfo}\n                        />\n                    ))\n                )} */}\n                {/* 삼항연산자 대신 && 이용해서 조건부 내용 출력*/}\n                {filteredExpenses.length === 0 && <p>No expenses found</p>}\n                {filteredExpenses.length > 0 &&\n                    filteredExpenses.map((expenseInfo) => (\n                        <ExpenseItem\n                            key={expenseInfo.id}\n                            expense={expenseInfo}\n                        />\n                    ))}\n            </Card>\n        </div>\n    );\n};\n\nexport default Expenses;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,gBAAgB;AACvB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACxB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;EAExD,MAAMW,mBAAmB,GAAIC,YAAY,IAAK;IAC1CF,eAAe,CAACE,YAAY,CAAC;IAC7B;IACA;EACJ,CAAC;;EAED,MAAMC,gBAAgB,GAAGN,KAAK,CAACO,KAAK,CAACC,MAAM,CACtCC,OAAO,IAAKA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKV,YAC3D,CAAC;EAED,oBACIJ,OAAA;IAAAe,QAAA,eACIf,OAAA,CAACJ,IAAI;MAACoB,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACtBf,OAAA,CAACF,cAAc;QACXmB,QAAQ,EAAEb,YAAa;QACvBc,cAAc,EAAEZ;MAAoB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,EAaDd,gBAAgB,CAACe,MAAM,KAAK,CAAC,iBAAIvB,OAAA;QAAAe,QAAA,EAAG;MAAiB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EACzDd,gBAAgB,CAACe,MAAM,GAAG,CAAC,IACxBf,gBAAgB,CAACgB,GAAG,CAAEC,WAAW,iBAC7BzB,OAAA,CAACH,WAAW;QAERc,OAAO,EAAEc;MAAY,GADhBA,WAAW,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEtB,CACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACnB,EAAA,CA3CIF,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AA6Cd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}