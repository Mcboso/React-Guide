{"ast":null,"code":"var _jsxFileName = \"/Users/seojuyeon/Desktop/React Guide/01-expense-tracker/src/components/NewExpense/ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpenseForm(props) {\n  _s();\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  const [beingEntered, setBeingEntered] = useState(false);\n  // const [userInput, setUserInput] = useState({\n  //     enteredTitle: \"\",\n  //     enteredAmount: \"\",\n  //     enteredDate: \"\",\n  // });\n\n  // const titleChangeHandler = (event) => {\n  //     console.log(event.target.value.length);\n  //     setEnteredTitle(event.target.value);\n  // setUserInput((prevState)=>{ //이전 상태 기반으로 할 때는 setState에 함수 전달\n  //     return {...prevState, enteredTitle: event.target.value };\n  // });\n  // };\n  // const amountChangeHandler = (event) => {\n  //     setEnteredAmount(event.target.value);\n  // };\n  // const dateChangeHandler = (event) => {\n  //     setEnteredDate(event.target.value);\n  // };\n\n  const inputChangeHandler = (identifier, value) => {\n    if (identifier === \"title\") {\n      setEnteredTitle(value);\n    } else if (identifier === \"amount\") {\n      setEnteredAmount(value);\n    } else if (identifier === \"date\") {\n      setEnteredDate(value);\n    }\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n    submitButtonHandler();\n  };\n  const addExpenseHandler = () => {\n    setBeingEntered(true);\n  };\n  const submitButtonHandler = () => {\n    setBeingEntered(false);\n  };\n  if (!beingEntered) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addExpenseHandler,\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: enteredTitle,\n          onChange: event => {\n            inputChangeHandler(\"title\", event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: enteredAmount,\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: event => {\n            inputChangeHandler(\"amount\", event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: enteredDate,\n          min: \"2000-01-01\",\n          max: \"2024\",\n          onChange: event => {\n            inputChangeHandler(\"date\", event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitButtonHandler,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(ExpenseForm, \"6osKuqXbR5oogxSNa4JZMWhZmz0=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ExpenseForm","props","_s","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","beingEntered","setBeingEntered","inputChangeHandler","identifier","value","submitHandler","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","submitButtonHandler","addExpenseHandler","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","type","onChange","target","min","step","max","_c","$RefreshReg$"],"sources":["/Users/seojuyeon/Desktop/React Guide/01-expense-tracker/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nfunction ExpenseForm(props) {\n    const [enteredTitle, setEnteredTitle] = useState(\"\");\n    const [enteredAmount, setEnteredAmount] = useState(\"\");\n    const [enteredDate, setEnteredDate] = useState(\"\");\n    const [beingEntered, setBeingEntered] = useState(false);\n    // const [userInput, setUserInput] = useState({\n    //     enteredTitle: \"\",\n    //     enteredAmount: \"\",\n    //     enteredDate: \"\",\n    // });\n\n    // const titleChangeHandler = (event) => {\n    //     console.log(event.target.value.length);\n    //     setEnteredTitle(event.target.value);\n    // setUserInput((prevState)=>{ //이전 상태 기반으로 할 때는 setState에 함수 전달\n    //     return {...prevState, enteredTitle: event.target.value };\n    // });\n    // };\n    // const amountChangeHandler = (event) => {\n    //     setEnteredAmount(event.target.value);\n    // };\n    // const dateChangeHandler = (event) => {\n    //     setEnteredDate(event.target.value);\n    // };\n\n    const inputChangeHandler = (identifier, value) => {\n        if (identifier === \"title\") {\n            setEnteredTitle(value);\n        } else if (identifier === \"amount\") {\n            setEnteredAmount(value);\n        } else if (identifier === \"date\") {\n            setEnteredDate(value);\n        }\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        const expenseData = {\n            title: enteredTitle,\n            amount: enteredAmount,\n            date: new Date(enteredDate),\n        };\n        props.onSaveExpenseData(expenseData);\n        setEnteredTitle(\"\");\n        setEnteredAmount(\"\");\n        setEnteredDate(\"\");\n        submitButtonHandler();\n    };\n\n    const addExpenseHandler = () => {\n        setBeingEntered(true);\n    };\n\n    const submitButtonHandler = () => {\n        setBeingEntered(false);\n    };\n\n    if (!beingEntered) {\n        return <button onClick={addExpenseHandler}>Add New Expense</button>;\n    }\n\n    return (\n        <form onSubmit={submitHandler}>\n            <div className=\"new-expense__controls\">\n                <div className=\"new-expense__control\">\n                    <label>Title</label>\n                    <input\n                        type=\"text\"\n                        value={enteredTitle}\n                        onChange={(event) => {\n                            inputChangeHandler(\"title\", event.target.value);\n                        }}\n                    />\n                    {/* inputChangeHandler에 event 바로 전달 할 수 없으므로 */}\n                    {/* value={enteredTitle}가 있어야 양방향 바인딩 가능 */}\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Amount</label>\n                    <input\n                        type=\"number\"\n                        value={enteredAmount}\n                        min=\"0.01\"\n                        step=\"0.01\"\n                        onChange={(event) => {\n                            inputChangeHandler(\"amount\", event.target.value);\n                        }}\n                    />\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Date</label>\n                    <input\n                        type=\"date\"\n                        value={enteredDate}\n                        min=\"2000-01-01\"\n                        max=\"2024\"\n                        onChange={(event) => {\n                            inputChangeHandler(\"date\", event.target.value);\n                        }}\n                    />\n                </div>\n            </div>\n            <div className=\"new-expense__actions\">\n                <button onClick={submitButtonHandler}>Cancel</button>\n                <button type=\"submit\">Add Expense</button>\n            </div>\n        </form>\n    );\n}\n\nexport default ExpenseForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}