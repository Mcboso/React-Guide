{"ast":null,"code":"var _jsxFileName = \"/Users/seojuyeon/Desktop/React Guide/07-food-order/src/store/CartProvider.js\",\n  _s = $RefreshSig$();\nimport CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cartReducer = (state, action) => {\n  let updatedItem;\n  let updatedItems;\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    if (existingCartItem) {\n      // cartItem에 이미 있는 항목 추가하는 경우\n      updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      // cartItem에 새 항목 추가하는 경우\n      updatedItem = {\n        ...action.item\n      };\n      updatedItems = [...state.items.concat(updatedItem)];\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  if (action.type === \"REMOVE\") {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingCartItem.price;\n    if (existingCartItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n      // updatedItems = [...state.items];\n      // updatedItems[existingCartItemIndex].amount--;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  return defaultCartState;\n};\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["CartContext","useReducer","jsxDEV","_jsxDEV","cartReducer","state","action","updatedItem","updatedItems","type","updatedTotalAmount","totalAmount","item","price","amount","existingCartItemIndex","items","findIndex","id","existingCartItem","concat","filter","defaultCartState","CartProvider","props","_s","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/seojuyeon/Desktop/React Guide/07-food-order/src/store/CartProvider.js"],"sourcesContent":["import CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\n\nconst cartReducer = (state, action) => {\n  let updatedItem;\n  let updatedItems;\n  \n  if (action.type === \"ADD\") {\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n    const existingCartItem = state.items[existingCartItemIndex];\n    if (existingCartItem) {\n      // cartItem에 이미 있는 항목 추가하는 경우\n      updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount,\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      // cartItem에 새 항목 추가하는 경우\n      updatedItem = { ...action.item };\n      updatedItems = [...state.items.concat(updatedItem)];\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  \n  if (action.type === \"REMOVE\") {\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.id\n    );\n    const existingCartItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingCartItem.price;\n    if(existingCartItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      updatedItem = {...existingCartItem, amount: existingCartItem.amount-1}; \n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n      // updatedItems = [...state.items];\n      // updatedItems[existingCartItemIndex].amount--;\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({ type: \"ADD\", item: item });\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({ type: \"REMOVE\", id: id });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}