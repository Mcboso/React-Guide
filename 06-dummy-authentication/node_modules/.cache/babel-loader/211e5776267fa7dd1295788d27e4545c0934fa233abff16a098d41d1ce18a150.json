{"ast":null,"code":"var _jsxFileName = \"/Users/seojuyeon/Desktop/React Guide/06-dummy-authentication/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport AuthContext from \"./components/Store/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\n    if (storedUserLoggedInInformation === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []); // 최초에 1번만 실행됨\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    setIsLoggedIn(true);\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n  };\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n    localStorage.removeItem(\"isLoggedIn\");\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        isLoggedIn: isLoggedIn,\n        onLogout: logoutHandler\n      },\n      children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n        isAuthenticated: isLoggedIn,\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: loginHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 27\n        }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n          onLogout: logoutHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","Home","MainHeader","AuthContext","jsxDEV","_jsxDEV","App","_s","storedUserLoggedInInformation","localStorage","getItem","setIsLoggedIn","loginHandler","email","password","setItem","logoutHandler","removeItem","Fragment","children","Provider","value","isLoggedIn","onLogout","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","$RefreshReg$"],"sources":["/Users/seojuyeon/Desktop/React Guide/06-dummy-authentication/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport AuthContext from \"./components/Store/auth-context\";\n\nfunction App() {\n  \n\n  useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\n    if (storedUserLoggedInInformation === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []); // 최초에 1번만 실행됨\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    setIsLoggedIn(true);\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n    localStorage.removeItem(\"isLoggedIn\");\n  };\n\n  return (\n    <React.Fragment>\n      <AuthContext.Provider\n        value={{ isLoggedIn: isLoggedIn, onLogout: logoutHandler }}\n      >\n        <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n        <main>\n          {!isLoggedIn && <Login onLogin={loginHandler} />}\n          {isLoggedIn && <Home onLogout={logoutHandler} />}\n        </main>\n      </AuthContext.Provider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,WAAW,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAGbR,SAAS,CAAC,MAAM;IACd,MAAMS,6BAA6B,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACxE,IAAIF,6BAA6B,KAAK,GAAG,EAAE;MACzCG,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACxC;IACA;IACAH,aAAa,CAAC,IAAI,CAAC;IACnBF,YAAY,CAACM,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC;EACzC,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1BL,aAAa,CAAC,KAAK,CAAC;IACpBF,YAAY,CAACQ,UAAU,CAAC,YAAY,CAAC;EACvC,CAAC;EAED,oBACEZ,OAAA,CAACR,KAAK,CAACqB,QAAQ;IAAAC,QAAA,eACbd,OAAA,CAACF,WAAW,CAACiB,QAAQ;MACnBC,KAAK,EAAE;QAAEC,UAAU,EAAEA,UAAU;QAAEC,QAAQ,EAAEP;MAAc,CAAE;MAAAG,QAAA,gBAE3Dd,OAAA,CAACH,UAAU;QAACsB,eAAe,EAAEF,UAAW;QAACC,QAAQ,EAAEP;MAAc;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpEvB,OAAA;QAAAc,QAAA,GACG,CAACG,UAAU,iBAAIjB,OAAA,CAACL,KAAK;UAAC6B,OAAO,EAAEjB;QAAa;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC/CN,UAAU,iBAAIjB,OAAA,CAACJ,IAAI;UAACsB,QAAQ,EAAEP;QAAc;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACa;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAErB;AAACrB,EAAA,CAnCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}