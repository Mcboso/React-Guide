{"ast":null,"code":"var _jsxFileName = \"/Users/seojuyeon/Desktop/React Guide/06-dummy-authentication/src/components/Login/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer, useContext } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../Store/auth-context\";\nimport Input from \"../Input/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (state, action) => {\n  //component 밖에서 함수 정의\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\")\n    };\n  } else if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes(\"@\")\n    };\n  }\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  } else if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\nconst Login = props => {\n  _s();\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // a state로 인해 b state가 결정되는 경우 (enteredEmail로 인해 emailisValid가 결정됨)에 useReducer 사용 고려\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const authCtx = useContext(AuthContext);\n  // object distructuring 별칭 할당 (emailState의 isValid property를 emailIsValid라는 별칭으로 선언)\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Checking form validity...\");\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500); //500ms 이후에 함수(첫번째 인자) 실행하라는 뜻\n    return () => {\n      console.log(\"Clean up...\");\n      clearTimeout(identifier);\n    }; // 최초 제외하고 side effect 함수 실행되기 직전에 실행됨 => 이전의 타이머 삭제\n  }, [emailIsValid, passwordIsValid]);\n  const emailChangeHandler = event => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n    // setFormIsValid(\n    //   emailState.value.includes(\"@\") && passwordState.value.trim().length > 6\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    // setEnteredPassword(event.target.value);\n    dispatchPassword({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n    // setFormIsValid(\n    //   emailState.value.includes(\"@\") && passwordState.value.trim().length > 6\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.value.includes(\"@\"));\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    });\n  };\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({\n      type: \"INPUT_BLUR\"\n    });\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    authCtx.onLogin(emailState.value, passwordState.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        id: \"E-Mail\",\n        isValid: emailIsValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        id: \"Password\",\n        isValid: passwordIsValid,\n        value: passwordState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"HeaU0MNZnLSnvzzlHI3T3HPPJPY=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","Card","classes","Button","AuthContext","Input","jsxDEV","_jsxDEV","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","_s","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","authCtx","emailIsValid","passwordIsValid","identifier","setTimeout","console","log","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","className","login","children","onSubmit","id","onChange","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","actions","btn","disabled","_c","$RefreshReg$"],"sources":["/Users/seojuyeon/Desktop/React Guide/06-dummy-authentication/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect, useReducer, useContext } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../Store/auth-context\";\nimport Input from \"../Input/Input\";\n\nconst emailReducer = (state, action) => {\n  //component 밖에서 함수 정의\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.includes(\"@\") };\n  } else if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.includes(\"@\") };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.trim().length > 6 };\n  } else if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // a state로 인해 b state가 결정되는 경우 (enteredEmail로 인해 emailisValid가 결정됨)에 useReducer 사용 고려\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null,\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null,\n  });\n\n  const authCtx = useContext(AuthContext);\n  // object distructuring 별칭 할당 (emailState의 isValid property를 emailIsValid라는 별칭으로 선언)\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Checking form validity...\");\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500); //500ms 이후에 함수(첫번째 인자) 실행하라는 뜻\n    return () => {\n      console.log(\"Clean up...\");\n      clearTimeout(identifier);\n    }; // 최초 제외하고 side effect 함수 실행되기 직전에 실행됨 => 이전의 타이머 삭제\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n    // setFormIsValid(\n    //   emailState.value.includes(\"@\") && passwordState.value.trim().length > 6\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    // setEnteredPassword(event.target.value);\n    dispatchPassword({ type: \"USER_INPUT\", val: event.target.value });\n    // setFormIsValid(\n    //   emailState.value.includes(\"@\") && passwordState.value.trim().length > 6\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.value.includes(\"@\"));\n    dispatchEmail({ type: \"INPUT_BLUR\" });\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({ type: \"INPUT_BLUR\" });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    authCtx.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input\n          type=\"email\"\n          id=\"E-Mail\"\n          isValid={emailIsValid}\n          value={emailState.value}\n          onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n        />\n        <Input\n          type=\"password\"\n          id=\"Password\"\n          isValid={passwordIsValid}\n          value={passwordState.value}\n          onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n        />\n        {/* <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div> */}\n        {/* <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div> */}\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,EAAEC,UAAU,QAAQ,OAAO;AAE1E,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,OAAOC,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACtC;EACA,IAAIA,MAAM,CAACC,IAAI,KAAK,YAAY,EAAE;IAChC,OAAO;MAAEC,KAAK,EAAEF,MAAM,CAACG,GAAG;MAAEC,OAAO,EAAEJ,MAAM,CAACG,GAAG,CAACE,QAAQ,CAAC,GAAG;IAAE,CAAC;EACjE,CAAC,MAAM,IAAIL,MAAM,CAACC,IAAI,KAAK,YAAY,EAAE;IACvC,OAAO;MAAEC,KAAK,EAAEH,KAAK,CAACG,KAAK;MAAEE,OAAO,EAAEL,KAAK,CAACG,KAAK,CAACG,QAAQ,CAAC,GAAG;IAAE,CAAC;EACnE;EACA,OAAO;IAAEH,KAAK,EAAE,EAAE;IAAEE,OAAO,EAAE;EAAM,CAAC;AACtC,CAAC;AAED,MAAME,eAAe,GAAGA,CAACP,KAAK,EAAEC,MAAM,KAAK;EACzC,IAAIA,MAAM,CAACC,IAAI,KAAK,YAAY,EAAE;IAChC,OAAO;MAAEC,KAAK,EAAEF,MAAM,CAACG,GAAG;MAAEC,OAAO,EAAEJ,MAAM,CAACG,GAAG,CAACI,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG;IAAE,CAAC;EACrE,CAAC,MAAM,IAAIR,MAAM,CAACC,IAAI,KAAK,YAAY,EAAE;IACvC,OAAO;MAAEC,KAAK,EAAEH,KAAK,CAACG,KAAK;MAAEE,OAAO,EAAEL,KAAK,CAACG,KAAK,CAACK,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG;IAAE,CAAC;EACvE;EACA,OAAO;IAAEN,KAAK,EAAE,EAAE;IAAEE,OAAO,EAAE;EAAM,CAAC;AACtC,CAAC;AAED,MAAMK,KAAK,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACvB;EACA;EACA;EACA;EACA;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAM,CAAC2B,UAAU,EAAEC,aAAa,CAAC,GAAG1B,UAAU,CAACS,YAAY,EAAE;IAC3DI,KAAK,EAAE,EAAE;IACTE,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAG5B,UAAU,CAACiB,eAAe,EAAE;IACpEJ,KAAK,EAAE,EAAE;IACTE,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAMc,OAAO,GAAG5B,UAAU,CAACI,WAAW,CAAC;EACvC;EACA,MAAM;IAAEU,OAAO,EAAEe;EAAa,CAAC,GAAGL,UAAU;EAC5C,MAAM;IAAEV,OAAO,EAAEgB;EAAgB,CAAC,GAAGJ,aAAa;EAElD5B,SAAS,CAAC,MAAM;IACd,MAAMiC,UAAU,GAAGC,UAAU,CAAC,MAAM;MAClCC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxCX,cAAc,CAACM,YAAY,IAAIC,eAAe,CAAC;IACjD,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACT,OAAO,MAAM;MACXG,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC1BC,YAAY,CAACJ,UAAU,CAAC;IAC1B,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAACF,YAAY,EAAEC,eAAe,CAAC,CAAC;EAEnC,MAAMM,kBAAkB,GAAIC,KAAK,IAAK;IACpC;IACAZ,aAAa,CAAC;MAAEd,IAAI,EAAE,YAAY;MAAEE,GAAG,EAAEwB,KAAK,CAACC,MAAM,CAAC1B;IAAM,CAAC,CAAC;IAC9D;IACA;IACA;EACF,CAAC;;EAED,MAAM2B,qBAAqB,GAAIF,KAAK,IAAK;IACvC;IACAV,gBAAgB,CAAC;MAAEhB,IAAI,EAAE,YAAY;MAAEE,GAAG,EAAEwB,KAAK,CAACC,MAAM,CAAC1B;IAAM,CAAC,CAAC;IACjE;IACA;IACA;EACF,CAAC;;EAED,MAAM4B,oBAAoB,GAAGA,CAAA,KAAM;IACjC;IACAf,aAAa,CAAC;MAAEd,IAAI,EAAE;IAAa,CAAC,CAAC;EACvC,CAAC;EAED,MAAM8B,uBAAuB,GAAGA,CAAA,KAAM;IACpC;IACAd,gBAAgB,CAAC;MAAEhB,IAAI,EAAE;IAAa,CAAC,CAAC;EAC1C,CAAC;EAED,MAAM+B,aAAa,GAAIL,KAAK,IAAK;IAC/BA,KAAK,CAACM,cAAc,CAAC,CAAC;IACtBf,OAAO,CAACgB,OAAO,CAACpB,UAAU,CAACZ,KAAK,EAAEc,aAAa,CAACd,KAAK,CAAC;EACxD,CAAC;EAED,oBACEL,OAAA,CAACN,IAAI;IAAC4C,SAAS,EAAE3C,OAAO,CAAC4C,KAAM;IAAAC,QAAA,eAC7BxC,OAAA;MAAMyC,QAAQ,EAAEN,aAAc;MAAAK,QAAA,gBAC5BxC,OAAA,CAACF,KAAK;QACJM,IAAI,EAAC,OAAO;QACZsC,EAAE,EAAC,QAAQ;QACXnC,OAAO,EAAEe,YAAa;QACtBjB,KAAK,EAAEY,UAAU,CAACZ,KAAM;QACxBsC,QAAQ,EAAEd,kBAAmB;QAC7Be,MAAM,EAAEX;MAAqB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACFhD,OAAA,CAACF,KAAK;QACJM,IAAI,EAAC,UAAU;QACfsC,EAAE,EAAC,UAAU;QACbnC,OAAO,EAAEgB,eAAgB;QACzBlB,KAAK,EAAEc,aAAa,CAACd,KAAM;QAC3BsC,QAAQ,EAAEd,kBAAmB;QAC7Be,MAAM,EAAEX;MAAqB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eA6BFhD,OAAA;QAAKsC,SAAS,EAAE3C,OAAO,CAACsD,OAAQ;QAAAT,QAAA,eAC9BxC,OAAA,CAACJ,MAAM;UAACQ,IAAI,EAAC,QAAQ;UAACkC,SAAS,EAAE3C,OAAO,CAACuD,GAAI;UAACC,QAAQ,EAAE,CAACpC,WAAY;UAAAyB,QAAA,EAAC;QAEtE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEX,CAAC;AAAClC,EAAA,CAvHIF,KAAK;AAAAwC,EAAA,GAALxC,KAAK;AAyHX,eAAeA,KAAK;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}