{"ast":null,"code":"var _jsxFileName = \"/Users/seojuyeon/Desktop/React Guide/06-dummy-authentication/src/components/Login/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.valid.includes('@')\n    };\n  } else if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: action.value.includes('@')\n    };\n  }\n  return {\n    value: \"\",\n    isValid: false\n  }; //component 밖에서 함수 정의\n};\n\nconst Login = props => {\n  _s();\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // a state로 인해 b state가 결정되는 경우 (enteredEmail로 인해 emailisValid가 결정됨)에 useReducer 사용 고려\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null\n  });\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Checking form validity...\");\n      setFormIsValid(enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6);\n    }, 500); //500ms 이후에 함수(첫번째 인자) 실행하라는 뜻\n    return () => {\n      console.log(\"Clean up...\");\n      clearTimeout(identifier);\n    }; // 최초 제외하고 side effect 함수 실행되기 직전에 실행됨 => 이전의 타이머 삭제\n  }, [enteredEmail, enteredPassword]);\n  const emailChangeHandler = event => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(emailState.value.includes(\"@\") && enteredPassword.trim().length > 6);\n  };\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(emailState.value.includes(\"@\") && enteredPassword.trim().length > 6);\n  };\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.value.includes(\"@\"));\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"ao02/Efo/kwYQ1hAukH+d/63+zM=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","Card","classes","Button","jsxDEV","_jsxDEV","emailReducer","state","action","type","value","val","isValid","valid","includes","Login","props","_s","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","dispatchEmail","identifier","setTimeout","console","log","enteredEmail","trim","length","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","className","login","children","onSubmit","control","invalid","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","onBlur","actions","btn","disabled","_c","$RefreshReg$"],"sources":["/Users/seojuyeon/Desktop/React Guide/06-dummy-authentication/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\nconst emailReducer = (state, action) => {\n  if(action.type === 'USER_INPUT') {\n    return {value: action.val, isValid: action.valid.includes('@')}\n  }\n  else if(action.type === 'INPUT_BLUR') {\n    return {value: state.value, isValid: action.value.includes('@')}\n  }\n  return { value: \"\", isValid: false }; //component 밖에서 함수 정의\n}\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // a state로 인해 b state가 결정되는 경우 (enteredEmail로 인해 emailisValid가 결정됨)에 useReducer 사용 고려\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null,\n  });\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Checking form validity...\");\n      setFormIsValid(\n        enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n      );\n    }, 500); //500ms 이후에 함수(첫번째 인자) 실행하라는 뜻\n    return () => {\n      console.log(\"Clean up...\");\n      clearTimeout(identifier);\n    }; // 최초 제외하고 side effect 함수 실행되기 직전에 실행됨 => 이전의 타이머 삭제\n  }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = (event) => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({type: 'USER_INPUT', val: event.target.value});\n    setFormIsValid(\n      emailState.value.includes(\"@\") && enteredPassword.trim().length > 6\n    );\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(\n      emailState.value.includes(\"@\") && enteredPassword.trim().length > 6\n    );\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.value.includes(\"@\"));\n    dispatchEmail({type: 'INPUT_BLUR'});\n\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}