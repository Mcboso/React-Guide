{"ast":null,"code":"var _jsxFileName = \"/Users/seojuyeon/Desktop/React Guide/18-deep-router/frontend/src/pages/NewEvent.js\";\nimport EventForm from \"../components/EventForm\";\nimport { json } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action(request, params) {\n  // EventForm의 Form에서 제출된 data가 request로 옴\n  console.log(\"!!\");\n  const data = await request.formData();\n  const eventData = {\n    // name property로 입력된 값으로 탐색\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const enteredTitle = data.get('title');\n  const response = await fetch(\"http://localhost:8080/events/\", {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'could not save event',\n      status: 500\n    });\n  } else {}\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["EventForm","json","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","console","log","data","formData","eventData","title","get","image","date","description","enteredTitle","response","fetch","method","headers","body","JSON","stringify","ok","message","status","$RefreshReg$"],"sources":["/Users/seojuyeon/Desktop/React Guide/18-deep-router/frontend/src/pages/NewEvent.js"],"sourcesContent":["import EventForm from \"../components/EventForm\";\nimport { json } from \"react-router-dom\";\n\nfunction NewEventPage() {\n  return <EventForm />;\n}\n\nexport default NewEventPage;\n\nexport async function action(request, params) { // EventForm의 Form에서 제출된 data가 request로 옴\n  console.log(\"!!\")\n  \n  const data = await request.formData();\n  const eventData = { // name property로 입력된 값으로 탐색\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description'),\n  } \n\n  const enteredTitle = data.get('title');\n  const response = await fetch(\"http://localhost:8080/events/\", {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData),\n  });\n\n  if (!response.ok) {\n    throw json({message: 'could not save event', status: 500});\n  }\n  else {\n\n  }\n} "],"mappings":";AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,YAAYA,CAAA,EAAG;EACtB,oBAAOD,OAAA,CAACH,SAAS;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtB;AAACC,EAAA,GAFQL,YAAY;AAIrB,eAAeA,YAAY;AAE3B,OAAO,eAAeM,MAAMA,CAACC,OAAO,EAAEC,MAAM,EAAE;EAAE;EAC9CC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EAEjB,MAAMC,IAAI,GAAG,MAAMJ,OAAO,CAACK,QAAQ,CAAC,CAAC;EACrC,MAAMC,SAAS,GAAG;IAAE;IAClBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACrC,CAAC;EAED,MAAMI,YAAY,GAAGR,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;EACtC,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;IAC5DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,SAAS;EAChC,CAAC,CAAC;EAEF,IAAI,CAACO,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM9B,IAAI,CAAC;MAAC+B,OAAO,EAAE,sBAAsB;MAAEC,MAAM,EAAE;IAAG,CAAC,CAAC;EAC5D,CAAC,MACI,CAEL;AACF;AAAC,IAAAxB,EAAA;AAAAyB,YAAA,CAAAzB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}