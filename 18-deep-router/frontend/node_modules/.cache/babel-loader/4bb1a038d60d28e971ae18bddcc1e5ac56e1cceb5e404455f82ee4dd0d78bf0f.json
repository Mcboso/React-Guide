{"ast":null,"code":"var _jsxFileName = \"/Users/seojuyeon/Desktop/React Guide/18-deep-router/frontend/src/pages/Events.js\",\n  _s = $RefreshSig$();\nimport EventsList from \"../components/EventsList\";\nimport { useLoaderData, json } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"could not fetch events\"\n    }), {\n      status: 500\n    });\n  } else {\n    // const resData = await response.json();\n    // return resData.events; // return하면 렌더링되고있는 페이지에 제공\n    return response; // response 를 return 가능\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","useLoaderData","json","jsxDEV","_jsxDEV","EventsPage","_s","data","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","Response","JSON","stringify","message","status","$RefreshReg$"],"sources":["/Users/seojuyeon/Desktop/React Guide/18-deep-router/frontend/src/pages/Events.js"],"sourcesContent":["import EventsList from \"../components/EventsList\";\nimport { useLoaderData, json } from \"react-router-dom\";\n\nfunction EventsPage() {\n  const data = useLoaderData();\n  const events = data.events;\n  return <EventsList events={events} />;\n}\n\nexport default EventsPage;\n\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (!response.ok) {\n    throw new Response(JSON.stringify({ message: \"could not fetch events\" }), {\n      status: 500,\n    });\n  } else {\n    // const resData = await response.json();\n    // return resData.events; // return하면 렌더링되고있는 페이지에 제공\n    return response; // response 를 return 가능\n  }\n}\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGN,aAAa,CAAC,CAAC;EAC5B,MAAMO,MAAM,GAAGD,IAAI,CAACC,MAAM;EAC1B,oBAAOJ,OAAA,CAACJ,UAAU;IAACQ,MAAM,EAAEA;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvC;AAACN,EAAA,CAJQD,UAAU;EAAA,QACJJ,aAAa;AAAA;AAAAY,EAAA,GADnBR,UAAU;AAMnB,eAAeA,UAAU;AAEzB,OAAO,eAAeS,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAAyB,CAAC,CAAC,EAAE;MACxEC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,MAAM;IACL;IACA;IACA,OAAOP,QAAQ,CAAC,CAAC;EACnB;AACF;AAAC,IAAAF,EAAA;AAAAU,YAAA,CAAAV,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}