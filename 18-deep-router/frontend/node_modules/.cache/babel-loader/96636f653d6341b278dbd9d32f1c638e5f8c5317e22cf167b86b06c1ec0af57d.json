{"ast":null,"code":"var _jsxFileName = \"/Users/seojuyeon/Desktop/React Guide/18-deep-router/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport RootLayout from \"./pages/Root\";\nimport HomePage from \"./pages/Home\";\nimport EventsPage, { loader as eventsLoader } from \"./pages/Events\";\nimport EventsDetailPage, { loader as eventDetailLoader, action as eventDeleteAction } from \"./pages/EventsDetail\";\nimport NewEventPage from \"./pages/NewEvent\";\nimport EditEventPage from \"./pages/EditEvent\";\nimport EventsLayout from \"./pages/EventsRoot\";\nimport ErrorPage from \"./pages/Error\";\nimport EventDetailPage from \"./pages/EventsDetail\";\nimport { action as manipulateEventAction } from './components/EventForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 19\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 31\n    }, this)\n  }, {\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(EventsLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 18\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 35\n      }, this),\n      loader: eventsLoader\n    },\n    // loader 함수를 렌더링 전에 실행함( 백엔드로부터 미리 데이터 로딩 가능)\n    {\n      path: \":eventId\",\n      // element 없음, loader 함수를 eventDetail, editEvent 모두에서 쓸 수 있도록\n      id: \"event-detail\",\n      // 하위 라우터에서 상위 라우터의 loader를 통해 데이터 접근하기 위해 \n      loader: eventDetailLoader,\n      // useLoaderData 훅을 통해 loader가 추가된 라우터와 같은 수준, 혹은 그보다 낮은 수준의 컴포넌트에서 loader 데이터에 접근 가능\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 39\n        }, this),\n        action: eventDeleteAction\n      }, {\n        path: \"edit\",\n        element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 40\n        }, this),\n        action: manipulateEventAction\n      }]\n    }, {\n      path: \"new\",\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 35\n      }, this),\n      action: manipulateEventAction\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","RootLayout","HomePage","EventsPage","loader","eventsLoader","EventsDetailPage","eventDetailLoader","action","eventDeleteAction","NewEventPage","EditEventPage","EventsLayout","ErrorPage","EventDetailPage","manipulateEventAction","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","id","App","_c","$RefreshReg$"],"sources":["/Users/seojuyeon/Desktop/React Guide/18-deep-router/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport RootLayout from \"./pages/Root\";\nimport HomePage from \"./pages/Home\";\nimport EventsPage, { loader as eventsLoader } from \"./pages/Events\";\nimport EventsDetailPage, {\n  loader as eventDetailLoader,\n  action as eventDeleteAction,\n} from \"./pages/EventsDetail\";\nimport NewEventPage from \"./pages/NewEvent\";\nimport EditEventPage from \"./pages/EditEvent\";\nimport EventsLayout from \"./pages/EventsRoot\";\nimport ErrorPage from \"./pages/Error\";\nimport EventDetailPage from \"./pages/EventsDetail\";\nimport {action as manipulateEventAction } from './components/EventForm';\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <RootLayout />,\n    errorElement: <ErrorPage />,\n    children: [\n      { index: true, element: <HomePage /> },\n      {\n        path: \"events\",\n        element: <EventsLayout />,\n        children: [\n          { index: true, element: <EventsPage />, loader: eventsLoader }, // loader 함수를 렌더링 전에 실행함( 백엔드로부터 미리 데이터 로딩 가능)\n          {\n            path: \":eventId\", // element 없음, loader 함수를 eventDetail, editEvent 모두에서 쓸 수 있도록\n            id: \"event-detail\", // 하위 라우터에서 상위 라우터의 loader를 통해 데이터 접근하기 위해 \n            loader: eventDetailLoader, // useLoaderData 훅을 통해 loader가 추가된 라우터와 같은 수준, 혹은 그보다 낮은 수준의 컴포넌트에서 loader 데이터에 접근 가능\n            children: [\n              { index: true, element: <EventDetailPage />, action: eventDeleteAction },\n              { path: \"edit\", element: <EditEventPage />, action: manipulateEventAction },\n            ],\n          },\n          { path: \"new\", element: <NewEventPage />, action: manipulateEventAction },\n        ],\n      },\n    ],\n  },\n]);\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}