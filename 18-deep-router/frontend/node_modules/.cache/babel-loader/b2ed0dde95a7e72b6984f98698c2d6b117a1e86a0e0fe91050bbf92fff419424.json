{"ast":null,"code":"var _jsxFileName = \"/Users/seojuyeon/Desktop/React Guide/18-deep-router/frontend/src/pages/NewEvent.js\";\nimport EventForm from \"../components/EventForm\";\nimport { json, redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  // EventForm의 Form에서 제출된 data가 request로 옴\n  const data = await request.formData();\n  const eventData = {\n    // name property로 입력된 값으로 탐색\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  if (response.status === 422) {}\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    console.log(\"!\");\n    throw json({\n      message: 'could not save event',\n      status: 500\n    });\n  } else {\n    console.log(\"?\");\n    return redirect('/events'); // response 객체 생성해서 리턴   \n  }\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["EventForm","json","redirect","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","response","status","fetch","method","headers","body","JSON","stringify","ok","console","log","message","$RefreshReg$"],"sources":["/Users/seojuyeon/Desktop/React Guide/18-deep-router/frontend/src/pages/NewEvent.js"],"sourcesContent":["import EventForm from \"../components/EventForm\";\nimport { json, redirect } from \"react-router-dom\";\n\nfunction NewEventPage() {\n  return <EventForm />;\n}\n\nexport default NewEventPage;\n\nexport async function action({request, params}) { // EventForm의 Form에서 제출된 data가 request로 옴\n  const data = await request.formData();\n  const eventData = { // name property로 입력된 값으로 탐색\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description'),\n  } \n\n  if(response.status === 422) {\n    \n  }\n\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData),\n  });\n  if (!response.ok) {\n    console.log(\"!\");\n    throw json({message: 'could not save event', status: 500});\n  }\n  else {\n    console.log(\"?\");\n    return redirect('/events'); // response 객체 생성해서 리턴   \n  }\n} "],"mappings":";AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,YAAYA,CAAA,EAAG;EACtB,oBAAOD,OAAA,CAACJ,SAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtB;AAACC,EAAA,GAFQL,YAAY;AAIrB,eAAeA,YAAY;AAE3B,OAAO,eAAeM,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAAE;EAChD,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EACrC,MAAMC,SAAS,GAAG;IAAE;IAClBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACrC,CAAC;EAED,IAAGI,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE,CAE5B;EAEA,MAAMD,QAAQ,GAAG,MAAME,KAAK,CAAC,8BAA8B,EAAE;IAC3DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,SAAS;EAChC,CAAC,CAAC;EACF,IAAI,CAACM,QAAQ,CAACQ,EAAE,EAAE;IAChBC,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IAChB,MAAM/B,IAAI,CAAC;MAACgC,OAAO,EAAE,sBAAsB;MAAEV,MAAM,EAAE;IAAG,CAAC,CAAC;EAC5D,CAAC,MACI;IACHQ,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IAChB,OAAO9B,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;EAC9B;AACF;AAAC,IAAAQ,EAAA;AAAAwB,YAAA,CAAAxB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}